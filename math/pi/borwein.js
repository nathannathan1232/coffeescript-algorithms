// Generated by CoffeeScript 1.12.3

/*
 * Calculates digits of pi using the Borwein Algorithm
 * https://en.wikipedia.org/wiki/Borwein%27s_algorithm
 * 
 * Each iteration of the formula adds 25 correct digits
 * This function ensures that every digit returned is accurate
 */

(function() {
  var borwein, math;

  math = require('mathjs');

  math.config({
    number: 'BigNumber',
    precision: 1000
  });

  borwein = function(n) {
    var a, b, c, equation, i, j, ref, res;
    a = math["eval"]('212175710912 * sqrt(61) + 1657145277365');
    b = math["eval"]('13773980892672 * sqrt(61) + 107578229802750');
    c = math["eval"]('(5280(236674 + 30303 * sqrt(61)))^3');
    res = 0;
    for (i = j = 0, ref = n; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {
      equation = "((-1)^" + i + " * (6 * " + i + ")! * (" + a + " + " + i + " * " + b + ")) / ((" + i + "!)^3 * (3 * " + i + ")! * " + c + "^(" + i + " + .5))";
      res = math.add(res, math["eval"](equation));
    }
    return (math["eval"]('1 / (' + res + ' * 12)') + '').slice(0, n * 25);
  };

  if (typeof module === 'object' && module.exports) {
    module.exports = borwein;
  } else if (window) {
    window.borwein = borwein;
  } else if (typeof define === 'function' && define.amd) {
    define([], function() {
      return borwein;
    });
  }

}).call(this);
